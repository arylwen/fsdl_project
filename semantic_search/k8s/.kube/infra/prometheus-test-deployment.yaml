apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"requests":{"memory":"400Mi"},"name":"prometheus"},{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"100m","memory":"50Mi"},"name":"config-reloader"}]},"output":{"containers":[{"limits":{"cpu":"650m","ephemeral-storage":"1Gi","memory":"718Mi"},"requests":{"cpu":"650m","ephemeral-storage":"1Gi","memory":"718Mi"},"name":"prometheus"},{"limits":{"cpu":"100m","ephemeral-storage":"1Gi","memory":"50Mi"},"requests":{"cpu":"100m","ephemeral-storage":"1Gi","memory":"50Mi"},"name":"config-reloader"}]},"modified":true}'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"prometheus":"test"},"name":"prometheus-test","namespace":"gmp-test"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"prometheus","prometheus":"test"}},"serviceName":"prometheus-test","template":{"metadata":{"labels":{"app":"prometheus","prometheus":"test"}},"spec":{"automountServiceAccountToken":true,"containers":[{"args":["--config.file=/prometheus/config_out/config.yaml","--storage.tsdb.path=/prometheus/data","--storage.tsdb.retention.time=24h","--web.enable-lifecycle","--storage.tsdb.no-lockfile","--web.route-prefix=/"],"image":"gke.gcr.io/prometheus-engine/prometheus:v2.35.0-gmp.2-gke.0","name":"prometheus","ports":[{"containerPort":9090,"name":"web"}],"readinessProbe":{"httpGet":{"path":"/-/ready","port":"web","scheme":"HTTP"}},"resources":{"requests":{"memory":"400Mi"}},"volumeMounts":[{"mountPath":"/prometheus/config_out","name":"config-out","readOnly":true},{"mountPath":"/prometheus/data","name":"prometheus-db"}]},{"args":["--config-file=/prometheus/config/config.yaml","--config-file-output=/prometheus/config_out/config.yaml","--reload-url=http://localhost:9090/-/reload","--listen-address=:19091"],"image":"gke.gcr.io/prometheus-engine/config-reloader:v0.4.3-gke.0","name":"config-reloader","ports":[{"containerPort":8080,"name":"reloader-web"}],"resources":{"limits":{"cpu":"100m","memory":"50Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"volumeMounts":[{"mountPath":"/prometheus/config","name":"config"},{"mountPath":"/prometheus/config_out","name":"config-out"}]}],"nodeSelector":{"kubernetes.io/arch":"amd64","kubernetes.io/os":"linux"},"terminationGracePeriodSeconds":600,"volumes":[{"emptyDir":{},"name":"prometheus-db"},{"configMap":{"defaultMode":420,"name":"prometheus-test"},"name":"config"},{"emptyDir":{},"name":"config-out"}]}}}}
  creationTimestamp: "2022-09-25T18:54:43Z"
  generation: 2
  labels:
    prometheus: test
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:prometheus: {}
      f:spec:
        f:podManagementPolicy: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:serviceName: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
              f:prometheus: {}
          f:spec:
            f:automountServiceAccountToken: {}
            f:containers:
              k:{"name":"config-reloader"}:
                .: {}
                f:args: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8080,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/prometheus/config"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/prometheus/config_out"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"prometheus"}:
                .: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":9090,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:memory: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/prometheus/config_out"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/prometheus/data"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:nodeSelector: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"config"}:
                .: {}
                f:configMap:
                  .: {}
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"config-out"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
              k:{"name":"prometheus-db"}:
                .: {}
                f:emptyDir: {}
                f:name: {}
        f:updateStrategy:
          f:rollingUpdate:
            .: {}
            f:partition: {}
          f:type: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2022-09-25T18:54:43Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"prometheus"}:
                f:args: {}
                f:volumeMounts:
                  k:{"mountPath":"/gmp"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
            f:volumes:
              k:{"name":"gmp-sa"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
    manager: kubectl-edit
    operation: Update
    time: "2022-09-25T21:21:06Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:availableReplicas: {}
        f:collisionCount: {}
        f:currentReplicas: {}
        f:currentRevision: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updateRevision: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2022-09-25T21:21:16Z"
  name: prometheus-test
  namespace: gmp-test
  resourceVersion: "14557373"
  uid: f9a19d94-9b4d-421f-b8ba-9fcd792192be
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
      prometheus: test
  serviceName: prometheus-test
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
        prometheus: test
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.file=/prometheus/config_out/config.yaml
        - --storage.tsdb.path=/prometheus/data
        - --storage.tsdb.retention.time=24h
        - --web.enable-lifecycle
        - --storage.tsdb.no-lockfile
        - --web.route-prefix=/
        - --export.credentials-file=/gmp/key.json
        image: gke.gcr.io/prometheus-engine/prometheus:v2.35.0-gmp.2-gke.0
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 650m
            ephemeral-storage: 1Gi
            memory: 718Mi
          requests:
            cpu: 650m
            ephemeral-storage: 1Gi
            memory: 718Mi
        securityContext:
          capabilities:
            drop:
            - NET_RAW
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /prometheus/config_out
          name: config-out
          readOnly: true
        - mountPath: /prometheus/data
          name: prometheus-db
        - mountPath: /gmp
          name: gmp-sa
          readOnly: true
      - args:
        - --config-file=/prometheus/config/config.yaml
        - --config-file-output=/prometheus/config_out/config.yaml
        - --reload-url=http://localhost:9090/-/reload
        - --listen-address=:19091
        image: gke.gcr.io/prometheus-engine/config-reloader:v0.4.3-gke.0
        imagePullPolicy: IfNotPresent
        name: config-reloader
        ports:
        - containerPort: 8080
          name: reloader-web
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            ephemeral-storage: 1Gi
            memory: 50Mi
          requests:
            cpu: 100m
            ephemeral-storage: 1Gi
            memory: 50Mi
        securityContext:
          capabilities:
            drop:
            - NET_RAW
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /prometheus/config
          name: config
        - mountPath: /prometheus/config_out
          name: config-out
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 600
      volumes:
      - emptyDir: {}
        name: prometheus-db
      - configMap:
          defaultMode: 420
          name: prometheus-test
        name: config
      - emptyDir: {}
        name: config-out
      - name: gmp-sa
        secret:
          defaultMode: 420
          secretName: gmp-test-sa
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
status:
  availableReplicas: 1
  collisionCount: 0
  currentReplicas: 1
  currentRevision: prometheus-test-b49f867b
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updateRevision: prometheus-test-b49f867b
  updatedReplicas: 1
