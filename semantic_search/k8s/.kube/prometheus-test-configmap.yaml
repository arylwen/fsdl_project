apiVersion: v1
data:
  config.yaml: |
    global:
      scrape_interval: 30s

    scrape_configs:
    # Let Prometheus scrape itself.
    - job_name: prometheus
      static_configs:
      - targets: ['localhost:9090']

    # Scrape pods with label app=prom-example across all namespaces
    # on the port named 'metrics'.
    - job_name: prom-example
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        regex: prom-example
        action: keep
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_name]
        regex: (.+);(.+)
        target_label: instance
        replacement: $1:$2
        action: replace
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        regex: metrics
        action: keep
    - job_name: 'ml_api'
      # Override the global default and scrape targets from this job every 5 seconds.
      scrape_interval: 5s
      # metrics_path defaults to '/metrics'
      # scheme defaults to 'http'.
      static_configs:
        - targets: ['ml_api:5000']
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"config.yaml":"global:\n  scrape_interval: 30s\n\nscrape_configs:\n# Let Prometheus scrape itself.\n- job_name: prometheus\n  static_configs:\n  - targets: ['localhost:9090']\n\n# Scrape pods with label app=prom-example across all namespaces\n# on the port named 'metrics'.\n- job_name: prom-example\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_pod_label_app]\n    regex: prom-example\n    action: keep\n  - source_labels: [__meta_kubernetes_namespace]\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_name]\n    regex: (.+);(.+)\n    target_label: instance\n    replacement: $1:$2\n    action: replace\n  - source_labels: [__meta_kubernetes_pod_container_port_name]\n    regex: metrics\n    action: keep\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"prometheus":"test"},"name":"prometheus-test","namespace":"gmp-test"}}
  creationTimestamp: "2022-09-25T18:54:43Z"
  labels:
    prometheus: test
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data: {}
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:prometheus: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2022-09-25T18:54:43Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        f:config.yaml: {}
    manager: GoogleCloudConsole
    operation: Update
    time: "2022-09-25T23:17:58Z"
  name: prometheus-test
  namespace: gmp-test
  resourceVersion: "14628886"
  uid: da8cbcf6-736e-4020-9ef5-6a71eff71685
